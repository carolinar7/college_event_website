generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique
  fName      String
  lName      String
  password   String
  role       Role         @default(STUDENT)
  Event      Event[]
  RSO        RSO[]
  RSOMembers RSOMembers[]

  @@index([email])
}

model University {
  id          String  @id @default(uuid())
  name        String
  location    String
  description String
  numStudents Int
  emailDomain String  @unique
  event       Event[]
  rso         RSO[]

  @@index([emailDomain], map: "University_emailDomain_fkey")
}

model RSO {
  id           String       @id
  name         String
  description  String
  adminId      String
  rsoMemberId  String
  universityId String
  Event        Event[]
  User         User         @relation(fields: [adminId], references: [id])
  University   University   @relation(fields: [universityId], references: [id])
  RSOMembers   RSOMembers[]

  @@index([adminId], map: "RSO_adminId_fkey")
  @@index([universityId], map: "RSO_universityId_fkey")
}

model RSOMembers {
  id       String @id
  memberId String
  rsoID    String
  User     User   @relation(fields: [memberId], references: [id])
  RSO      RSO    @relation(fields: [rsoID], references: [id])

  @@index([rsoID], map: "RSOMembers_rsoID_fkey")
  @@index([memberId], map: "RSOMembers_memberId_fkey")
}

model Event {
  id           String      @id @default(uuid())
  tags         String
  title        String
  description  String
  starts       String
  ends         String
  eventType    EventType
  eventStatus  EventStatus
  location     String
  location_url String
  hostId       String
  rsoId        String?
  universityId String
  User         User        @relation(fields: [hostId], references: [id])
  RSO          RSO?        @relation(fields: [rsoId], references: [id])
  University   University  @relation(fields: [universityId], references: [id])

  @@index([eventType, eventStatus], map: "Event_eventType_eventStatus_fkey")
  @@index([rsoId], map: "Event_rsoId_fkey")
  @@index([hostId], map: "Event_hostId_fkey")
  @@index([universityId], map: "Event_universityId_fkey")
}

enum Role {
  SUPERADMIN
  ADMIN
  STUDENT
}

enum EventType {
  PUBLIC
  PRIVATE
  RSO
}

enum EventStatus {
  PENDING
  APPROVED
}
